import Operator from "./base";

/**
 * The operator for managing secret keys.
 */
export default class SecretKey extends Operator {
	/**
	 * Create a new secret key used for accessing the API.
	 *
	 * @param ipAddress - This is optional. It specifies the IP address that will be linked to the key.
	 * If this node is not specified, the IP address of the request sender will be used.
	 *
	 * @param description - This is optional. It specifies additional information about the key.
	 *
	 * @returns A promise which resolves to the new secret key that was generated by Plesk.
	 */
	public async create(ipAddress: string, description?: string) {
		const response = await this.execute("secret_key", [
			"-c",
			"-ip-address",
			ipAddress,
			...(description === undefined
				? [ ]
				: [ "-description",	description	])
		]);

		return response;
	}

	/**
	 * List information about the secret keys that exist on the server.
	 *
	 * @returns Information about the existing keys.
	 */
	public async list() {
		const response = await this.execute("secret_key", [ "-l" ]);

		const keys = response.split("\n\n");

		return keys.map(keyInfo => {
			const lines = keyInfo.split("\n").map(line => line.trim());

			const ip = lines[1].length > 3 ? lines[1].slice(4) : undefined;
			const description = lines[2].length > 12 ? lines[1].slice(13) : undefined;

			return {
				id: parseInt(lines[0].slice(8), 10),
				ip,
				description
			};
		});
	}

	/**
	 * Delete specified secret keys from the server.
	 *
	 * @param key - Pass either the value or the id of the key to delete.
	 */
	public async delete(key: number | string) {
		await this.execute("secret_key", [
			"-d",
			"-key",
			typeof key === "string" ? key : key.toString()
		]);
	}
}